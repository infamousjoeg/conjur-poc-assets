{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "pocName": {
            "type": "string",
            "defaultValue": "secretsHubPOC",
            "metadata": {
                "description": "Name of the POC"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "secretsHubPOCAdmin",
            "metadata": {
                "description": "The administrator username for the VM."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password for the VM."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS1_v2",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2"
            ],
            "metadata": {
                "description": "The size of the VM that will be created."
            }
        }
    },
    "functions": [],
    "variables": {
        "vNetName": "[concat(parameters('pocName'), 'VNet')]",
        "vmName": "[concat(parameters('pocName'), 'VM')]",
        "kvName": "[concat(parameters('pocName'), 'KV')]",
        "vmNicName": "[concat(parameters('pocName'), 'VMNic')]",
        "vmNicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]",
        "vNetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
        "subnetRef": "[concat(variables('vNetId'), '/subnets/default')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('vNetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('vmNicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[variables('vmNicId')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('kvName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "networkAcls": {
                    "defaultAction": "Deny",
                    "virtualNetworkRules": [
                        {
                            "id": "[variables('subnetRef')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ],
                    "ipRules": [],
                    "bypass": "AzureServices"
                },
                "accessPolicies": []
            }
        }
    ],
    "outputs": {}
}